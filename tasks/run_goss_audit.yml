---

- name: "run {{ audit_time }} remediation secedit export"
  win_command: "powershell.exe -noninteractive -noprofile -command secedit.exe /export /cfg {{ goss_audit_path }}\\secedit_{{ audit_time }}.txt"

- name: "run {{ audit_time }} remediation auditpol report"
  win_shell: "auditpol.exe /get /category:* > {{ goss_audit_path }}auditpol_{{ audit_time }}.txt"

- name: copy the template used by ansible for consistent checks
  win_template:
      src: ansible_vars_goss.yml.j2
      dest: "{{ goss_vars_path }}"

- name: Run the goss audit
  #win_shell: "{{ goss_audit_path }}{{ goss_exe }} -g {{ goss_audit_path }}{{ win2016_os_distribution }}-{{ benchmark }}-Audit\\goss.yml --vars {{ goss_vars_path }} v -f json -o pretty | Out-File {{ goss_output_file }}"
  win_shell: "{{ goss_audit_path }}{{ goss_exe }} -g c:\\vagrant\\Win2016-CIS-Audit\\goss.yml --vars {{ goss_vars_path }} v -f json -o pretty | Out-File {{ goss_output_file }}"
  failed_when: false

- name: Capture the pre remediation audit data summary
  block:
  - name: "capture pre remediation audit data"
    win_command: "powershell.exe -noninteractive -noprofile -command (Get-Content {{ goss_output_file }} | ConvertFrom-Json).summary"
    register: pre_audit
    changed_when: false

  - name: Capture pre-audit result
    set_fact:
        pre_audit_summary: "{{ pre_audit.stdout }}"
    vars:
        summary: 'summary."summary-line"'
  when:
  - audit_time == 'pre'

- name: Capture the post remediation audit data summary
  block:
  - name: "capture post remediation audit data"
    win_command: "powershell.exe -noninteractive -noprofile -command (Get-Content {{ goss_output_file }} | ConvertFrom-Json).summary"
    register: post_audit
    changed_when: false

  - name: Capture post-audit result
    set_fact:
        post_audit_summary: "{{ post_audit.stdout }}"
    vars:
        summary: 'summary."summary-line"'
  when:
  - audit_time == 'post'
  